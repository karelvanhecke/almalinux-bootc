name: Release

on:
  workflow_call:
    inputs:
      image:
        description: Name of the image
        type: string
        required: false
        default: almalinux
      registry:
        description: Registry and namespace to push the image to
        type: string
        required: false
        default: ghcr.io/${{ github.repository_owner }}/bootc

jobs:
  build-publish:
    name: Build and publish base image     
    permissions:
      packages: write
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: 'true'

      - name: Set image tags
        id: tags
        run: |
          #!/bin/bash
          set -xeo pipefail

          versionfile=almalinux-bootc-version.yaml

          releasever=$(yq '.releasever' ${versionfile})
          version=${releasever}.$(date +%s)
          yq -i ".add-commit-metadata.version = \"${version}\"" ${versionfile}
          tags="${releasever%%.*} $releasever $version"

          echo "tags=$tags" >> "$GITHUB_OUTPUT"

      - name: Install qemu dependencies
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Build image
        id: build
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
        with:
          image: ${{ inputs.image }}
          tags: ${{ steps.tags.outputs.tags }}
          archs: amd64, arm64
          containerfiles: |
            Dockerfile
          oci: 'true'
          extra-args: |
            --security-opt=label=disable
            --cap-add=all
            --device /dev/fuse
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Push image to ghcr.io
        id: push
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Sign image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: >-
          cosign sign --recursive --yes --key env://COSIGN_PRIVATE_KEY
          --registry-password='${{ secrets.GITHUB_TOKEN }}'
          --registry-username='${{ github.actor }}'
          ${{ inputs.registry }}/${{ steps.build.outputs.image }}@${{ steps.push.outputs.digest }}
